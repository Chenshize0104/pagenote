chainWebpack changed, restart server...
info  - Restart dev server with port 8000...
info  - Umi v4.0.89
info  - [MFSU] restore cache
{
mode: 'development',
stats: 'none',
devtool: 'cheap-module-source-map',
target: [
'web',
'es5'
],
experiments: {
topLevelAwait: true,
outputModule: false
},
cache: {
type: 'filesystem',
version: '4.0.89',
buildDependencies: {
config: [
'/Users/keren/Desktop/pagenote/packages/web-components/package.json',
'/Users/keren/Desktop/pagenote/packages/web-components/.dumirc.ts'
]
},
cacheDirectory: '/Users/keren/Desktop/pagenote/packages/web-components/node_modules/.cache/bundler-webpack'
},
infrastructureLogging: {
level: 'error'
},
output: {
path: '/Users/keren/Desktop/pagenote/packages/web-components/docs-dist',
filename: '[name].js',
chunkFilename: '[name].async.js',
publicPath: '/',
pathinfo: true,
assetModuleFilename: 'static/[name].[hash:8][ext]',
hashFunction: 'xxhash64'
},
resolve: {
symlinks: true,
alias: {
umi: '@@/exports',
react: '/Users/keren/Desktop/pagenote/node_modules/react',
'react-dom': '/Users/keren/Desktop/pagenote/node_modules/react-dom',
'react-router': '/Users/keren/Desktop/pagenote/node_modules/react-router',
'react-router-dom': '/Users/keren/Desktop/pagenote/node_modules/react-router-dom',
'@': '/Users/keren/Desktop/pagenote/packages/web-components/src',
'@@': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
'regenerator-runtime': '/Users/keren/Desktop/pagenote/node_modules/@umijs/preset-umi/node_modules/regenerator-runtime',
'pagenote/dist': '/Users/keren/Desktop/pagenote/packages/web-components/src/index',
pagenote: '/Users/keren/Desktop/pagenote/packages/web-components/src',
dumi$: '@@/dumi/exports',
'dumi/theme': 'dumi/theme-original',
'dumi/theme-original': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme',
'dumi/theme-default': '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default'
},
extensions: [
'.ts',
'.tsx',
'.js',
'.jsx',
'.mjs',
'.cjs',
'.json',
'.wasm'
],
modules: [
'node_modules'
],
fallback: {
assert: '/Users/keren/Desktop/pagenote/node_modules/node-libs-browser/node_modules/assert/assert.js',
buffer: '/Users/keren/Desktop/pagenote/node_modules/buffer/index.js',
child_process: false,
cluster: false,
console: '/Users/keren/Desktop/pagenote/node_modules/console-browserify/index.js',
constants: '/Users/keren/Desktop/pagenote/node_modules/constants-browserify/constants.json',
crypto: '/Users/keren/Desktop/pagenote/node_modules/crypto-browserify/index.js',
dgram: false,
dns: false,
domain: '/Users/keren/Desktop/pagenote/node_modules/domain-browser/source/index.js',
events: '/Users/keren/Desktop/pagenote/node_modules/events/events.js',
fs: false,
http: false,
https: false,
module: false,
net: false,
os: '/Users/keren/Desktop/pagenote/node_modules/os-browserify/browser.js',
path: '/Users/keren/Desktop/pagenote/node_modules/path-browserify/index.js',
punycode: '/Users/keren/Desktop/pagenote/node_modules/punycode/punycode.js',
process: '/Users/keren/Desktop/pagenote/node_modules/process/browser.js',
querystring: '/Users/keren/Desktop/pagenote/node_modules/querystring-es3/index.js',
readline: false,
repl: false,
stream: '/Users/keren/Desktop/pagenote/node_modules/stream-browserify/index.js',
_stream_duplex: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/duplex.js',
_stream_passthrough: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/passthrough.js',
_stream_readable: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/readable.js',
_stream_transform: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/transform.js',
_stream_writable: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/writable.js',
string_decoder: '/Users/keren/Desktop/pagenote/node_modules/string_decoder/lib/string_decoder.js',
sys: '/Users/keren/Desktop/pagenote/node_modules/node-libs-browser/node_modules/util/util.js',
timers: '/Users/keren/Desktop/pagenote/node_modules/timers-browserify/main.js',
tls: false,
tty: '/Users/keren/Desktop/pagenote/node_modules/tty-browserify/index.js',
url: '/Users/keren/Desktop/pagenote/node_modules/url/url.js',
util: '/Users/keren/Desktop/pagenote/node_modules/node-libs-browser/node_modules/util/util.js',
vm: '/Users/keren/Desktop/pagenote/node_modules/vm-browserify/index.js',
zlib: '/Users/keren/Desktop/pagenote/node_modules/browserify-zlib/lib/index.js'
}
},
module: {
rules: [
/* config.module.rule('src') */
{
test: /\.(js|mjs|cjs)$/,
include: [
[
'/Users/keren/Desktop/pagenote/packages/web-components',
'/Users/keren/Desktop/pagenote/packages/web-components'
]
],
exclude: [
/node_modules/
],
use: [
/* config.module.rule('src').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {
runtime: 'automatic'
},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false
}
],
{
plugins: [
[
function () { /* omitted long function */ },
{
cwd: '/Users/keren/Desktop/pagenote/packages/web-components',
absTmpPath: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
onCheckCode: function () { /* omitted long function */ }
}
]
]
}
],
plugins: [
'/Users/keren/Desktop/pagenote/node_modules/react-refresh/babel.js',
[
function () { /* omitted long function */ },
{
onTransformDeps: () => {
},
onCollect: function () { /* omitted long function */ },
exportAllMembers: undefined,
unMatchLibs: [
/dumi\/dist\/client/,
/compiled\/_internal\/searchWorker/,
/dumi\/theme-default/,
/@ant-design\/icons-svg/,
'react',
'react-dom'
],
remoteName: 'mf',
alias: {},
externals: []
}
]
]
}
}
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('jsx-ts-tsx') */
{
test: /\.(jsx|ts|tsx)$/,
use: [
/* config.module.rule('jsx-ts-tsx').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {
runtime: 'automatic'
},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false
}
],
{
plugins: [
[
function () { /* omitted long function */ },
{
cwd: '/Users/keren/Desktop/pagenote/packages/web-components',
absTmpPath: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
onCheckCode: function () { /* omitted long function */ }
}
]
]
}
],
plugins: [
'/Users/keren/Desktop/pagenote/node_modules/react-refresh/babel.js',
[
function () { /* omitted long function */ },
{
onTransformDeps: () => {
},
onCollect: function () { /* omitted long function */ },
exportAllMembers: undefined,
unMatchLibs: [
/dumi\/dist\/client/,
/compiled\/_internal\/searchWorker/,
/dumi\/theme-default/,
/@ant-design\/icons-svg/,
'react',
'react-dom'
],
remoteName: 'mf',
alias: {},
externals: []
}
]
]
}
}
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('extra-src') */
{
test: /\.(js|mjs|cjs)$/,
include: [
[
/dumi\/dist\/client/,
/compiled\/_internal\/searchWorker/,
/dumi\/theme-default/,
/@ant-design\/icons-svg/,
'/Users/keren/Desktop/pagenote/node_modules/dumi/dist/client/theme-api',
function () { /* omitted long function */ }
]
],
use: [
/* config.module.rule('extra-src').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {
runtime: 'automatic'
},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false
}
],
{
plugins: [
[
function () { /* omitted long function */ },
{
cwd: '/Users/keren/Desktop/pagenote/packages/web-components',
absTmpPath: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
onCheckCode: function () { /* omitted long function */ }
}
]
]
}
],
plugins: [
'/Users/keren/Desktop/pagenote/node_modules/react-refresh/babel.js',
[
function () { /* omitted long function */ },
{
onTransformDeps: () => {
},
onCollect: function () { /* omitted long function */ },
exportAllMembers: undefined,
unMatchLibs: [
/dumi\/dist\/client/,
/compiled\/_internal\/searchWorker/,
/dumi\/theme-default/,
/@ant-design\/icons-svg/,
'react',
'react-dom'
],
remoteName: 'mf',
alias: {},
externals: []
}
]
]
}
}
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('dep') */
{
test: /\.(js|mjs|cjs)$/,
include: [
/node_modules/
],
exclude: [
function () { /* omitted long function */ }
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('css') */
{
test: /\.css(\?.*)?$/,
oneOf: [
/* config.module.rule('css').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('css').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('css').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('css').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
}
]
},
/* config.module.rule('css').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('css').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('css').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
}
]
}
]
},
/* config.module.rule('less') */
{
test: /\.less(\?.*)?$/,
oneOf: [
/* config.module.rule('less').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('less').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('less').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('less').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('less').oneOf('css-modules').use('less-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/less-loader/index.js',
options: {
implementation: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-utils/compiled/less/index.js',
lessOptions: {
modifyVars: {
'dark-selector': '~\'[data-prefers-color="dark"]\''
},
javascriptEnabled: true
}
}
}
]
},
/* config.module.rule('less').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('less').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('less').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('less').oneOf('css').use('less-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/less-loader/index.js',
options: {
implementation: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-utils/compiled/less/index.js',
lessOptions: {
modifyVars: {
'dark-selector': '~\'[data-prefers-color="dark"]\''
},
javascriptEnabled: true
}
}
}
]
}
]
},
/* config.module.rule('sass') */
{
test: /\.(sass|scss)(\?.*)?$/,
oneOf: [
/* config.module.rule('sass').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('sass').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('sass').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('sass').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('sass').oneOf('css-modules').use('sass-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/sass-loader/index.js'
}
]
},
/* config.module.rule('sass').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('sass').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('sass').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('sass').oneOf('css').use('sass-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/sass-loader/index.js'
}
]
}
]
},
/* config.module.rule('stylus') */
{
test: /\.(styl|stylus)(\?.*)?$/,
oneOf: [
/* config.module.rule('stylus').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('stylus').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('stylus').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('stylus').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('stylus').oneOf('css-modules').use('stylus-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/stylus-loader/index.js'
}
]
},
/* config.module.rule('stylus').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('stylus').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('stylus').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/stylus-loader/index.js'
}
]
}
]
},
/* config.module.rule('asset') */
{
oneOf: [
/* config.module.rule('asset').oneOf('avif') */
{
test: /\.avif$/,
type: 'asset',
mimetype: 'image/avif',
parser: {
dataUrlCondition: {
maxSize: 10000
}
}
},
/* config.module.rule('asset').oneOf('image') */
{
test: /\.(bmp|gif|jpg|jpeg|png)$/,
type: 'asset',
parser: {
dataUrlCondition: {
maxSize: 10000
}
}
},
/* config.module.rule('asset').oneOf('fallback') */
{
type: 'asset/resource',
exclude: [
/^$/,
/\.(js|mjs|cjs|jsx|ts|tsx)$/,
/\.(css|less|sass|scss|styl|stylus)$/,
/\.html$/,
/\.json$/
]
}
]
},
/* config.module.rule('svgr') */
{
test: /\.svg$/,
issuer: /\.[jt]sx?$/,
type: 'javascript/auto',
use: [
/* config.module.rule('svgr').use('svgr-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/dist/loader/svgr.js',
options: {
svgoConfig: {
plugins: [
{
name: 'preset-default',
params: {
overrides: {
removeTitle: false
}
}
},
'prefixIds'
]
},
svgo: true
}
},
/* config.module.rule('svgr').use('url-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/url-loader/index.js',
options: {
limit: 10000,
fallback: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/file-loader/index.js'
}
}
]
},
/* config.module.rule('svg') */
{
test: /\.svg$/,
use: [
/* config.module.rule('svg').use('svgo-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/svgo-loader/index.js',
options: {
configFile: false
}
}
]
},
/* config.module.rule('dumi-md') */
{
type: 'javascript/auto',
test: /\.md$/,
oneOf: [
/* config.module.rule('dumi-md').oneOf('md-meta') */
{
resourceQuery: /meta$/,
use: [
/* config.module.rule('dumi-md').oneOf('md-meta').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {
runtime: 'automatic'
},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false
}
],
{
plugins: [
[
function () { /* omitted long function */ },
{
cwd: '/Users/keren/Desktop/pagenote/packages/web-components',
absTmpPath: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
onCheckCode: function () { /* omitted long function */ }
}
]
]
}
],
plugins: [
'/Users/keren/Desktop/pagenote/node_modules/react-refresh/babel.js',
[
function () { /* omitted long function */ },
{
onTransformDeps: () => {
},
onCollect: function () { /* omitted long function */ },
exportAllMembers: undefined,
unMatchLibs: [
/dumi\/dist\/client/,
/compiled\/_internal\/searchWorker/,
/dumi\/theme-default/,
/@ant-design\/icons-svg/,
'react',
'react-dom'
],
remoteName: 'mf',
alias: {},
externals: []
}
]
]
}
},
/* config.module.rule('dumi-md').oneOf('md-meta').use('md-meta-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/loaders/markdown/index.js',
options: {
techStacks: [
{
name: 'react'
}
],
cwd: '/Users/keren/Desktop/pagenote/packages/web-components',
alias: {
umi: '@@/exports',
react: '/Users/keren/Desktop/pagenote/node_modules/react',
'react-dom': '/Users/keren/Desktop/pagenote/node_modules/react-dom',
'react-router': '/Users/keren/Desktop/pagenote/node_modules/react-router',
'react-router-dom': '/Users/keren/Desktop/pagenote/node_modules/react-router-dom',
'@': '/Users/keren/Desktop/pagenote/packages/web-components/src',
'@@': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
'regenerator-runtime': '/Users/keren/Desktop/pagenote/node_modules/@umijs/preset-umi/node_modules/regenerator-runtime',
'pagenote/dist': '/Users/keren/Desktop/pagenote/packages/web-components/src/index',
pagenote: '/Users/keren/Desktop/pagenote/packages/web-components/src',
dumi$: '@@/dumi/exports',
'dumi/theme': 'dumi/theme-original',
'dumi/theme-original': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme',
'dumi/theme-default': '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default'
},
resolve: {
docDirs: [
'docs'
],
atomDirs: [
{
type: 'component',
dir: 'src'
}
],
codeBlockMode: 'active',
forceKebabCaseRouting: true
},
extraRemarkPlugins: undefined,
extraRehypePlugins: undefined,
routes: {
'404': {
id: '404',
path: '*',
absPath: '/*',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/client/pages/404.js'
},
'dumi-context-layout': {
id: 'dumi-context-layout',
path: '/',
file: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme/ContextWrapper',
parentId: undefined,
absPath: '/',
isLayout: true,
__absFile: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme/ContextWrapper'
},
DocLayout: {
id: 'DocLayout',
path: '/',
file: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/layouts/DocLayout/index.js',
parentId: 'dumi-context-layout',
absPath: '/',
isLayout: true
},
'docs/guide': {
path: 'guide',
id: 'docs/guide',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/docs/guide.md',
absPath: '/guide'
},
'docs/index': {
path: '',
id: 'docs/index',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/docs/index.md',
absPath: '/'
},
'components/Foo/index': {
id: 'components/Foo/index',
path: 'components/foo',
absPath: '/components/foo',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/src/Foo/index.md',
meta: {
_atom_route: true
}
},
'components/Keyword/index': {
id: 'components/Keyword/index',
path: 'components/keyword',
absPath: '/components/keyword',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/src/Keyword/index.md',
meta: {
_atom_route: true
}
},
'demo-render': {
id: 'demo-render',
path: '~demos/:id',
absPath: '/~demos/:id',
parentId: 'dumi-context-layout',
file: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/client/pages/Demo/index.js'
}
},
locales: [
{
id: 'zh-CN',
name: '中文',
base: '/'
}
],
pkg: {
name: 'pagenote',
version: '0.0.1',
description: 'A react library developed with dumi',
module: 'dist/index.js',
types: 'dist/index.d.ts',
scripts: {
start: 'npm run dev',
dev: 'dumi dev',
build: 'father build',
'build:watch': 'father dev',
'docs:build': 'dumi build',
prepare: 'husky install && dumi setup',
doctor: 'father doctor',
lint: 'npm run lint:es && npm run lint:css',
'lint:css': 'stylelint "{src,test}/**/*.{css,less}"',
'lint:es': 'eslint "{src,test}/**/*.{js,jsx,ts,tsx}"',
prepublishOnly: 'father doctor && npm run build'
},
authors: [],
license: 'MIT',
files: [
'dist'
],
commitlint: {
'extends': [
'@commitlint/config-conventional'
]
},
'lint-staged': {
'*.{md,json}': [
'prettier --write --no-error-on-unmatched-pattern'
],
'*.{css,less}': [
'stylelint --fix',
'prettier --write'
],
'*.{js,jsx}': [
'eslint --fix',
'prettier --write'
],
'*.{ts,tsx}': [
'eslint --fix',
'prettier --parser=typescript --write'
]
},
publishConfig: {
access: 'public'
},
peerDependencies: {
react: '>=16.9.0',
'react-dom': '>=16.9.0'
},
devDependencies: {
'@commitlint/cli': '^18.4.3',
'@commitlint/config-conventional': '^18.4.3',
'@types/react': '^18.2.38',
'@types/react-dom': '^18.2.17',
'@umijs/lint': '^4.0.88',
autoprefixer: '^10.4.16',
'css-loader': '^6.8.1',
dumi: '^2.2.14',
eslint: '^8.54.0',
father: '^4.3.7',
husky: '^8.0.3',
'lint-staged': '^15.1.0',
'node-sass': '^9.0.0',
postcss: '^8.4.32',
'postcss-loader': '^7.3.3',
prettier: '^3.1.0',
'prettier-plugin-organize-imports': '^3.2.3',
'prettier-plugin-packagejson': '^2.4.6',
'raw-loader': '^4.0.2',
react: '^18.2.0',
'react-dom': '^18.2.0',
'sass-loader': '^13.3.2',
'sass-to-string': '^1.6.3',
'style-loader': '^3.3.3',
stylelint: '^15.11.0',
tailwindcss: '^3.3.6'
},
dependencies: {
'@r2wc/react-to-web-component': '^2.0.3'
}
},
mode: 'meta',
onResolveDemos: function () { /* omitted long function */ },
onResolveAtomMeta: function () { /* omitted long function */ }
}
}
]
},
/* config.module.rule('dumi-md').oneOf('md') */
{
use: [
/* config.module.rule('dumi-md').oneOf('md').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {
runtime: 'automatic'
},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false
}
],
{
plugins: [
[
function () { /* omitted long function */ },
{
cwd: '/Users/keren/Desktop/pagenote/packages/web-components',
absTmpPath: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
onCheckCode: function () { /* omitted long function */ }
}
]
]
}
],
plugins: [
'/Users/keren/Desktop/pagenote/node_modules/react-refresh/babel.js',
[
function () { /* omitted long function */ },
{
onTransformDeps: () => {
},
onCollect: function () { /* omitted long function */ },
exportAllMembers: undefined,
unMatchLibs: [
/dumi\/dist\/client/,
/compiled\/_internal\/searchWorker/,
/dumi\/theme-default/,
/@ant-design\/icons-svg/,
'react',
'react-dom'
],
remoteName: 'mf',
alias: {},
externals: []
}
]
]
}
},
/* config.module.rule('dumi-md').oneOf('md').use('md-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/loaders/markdown/index.js',
options: {
techStacks: [
{
name: 'react'
}
],
cwd: '/Users/keren/Desktop/pagenote/packages/web-components',
alias: {
umi: '@@/exports',
react: '/Users/keren/Desktop/pagenote/node_modules/react',
'react-dom': '/Users/keren/Desktop/pagenote/node_modules/react-dom',
'react-router': '/Users/keren/Desktop/pagenote/node_modules/react-router',
'react-router-dom': '/Users/keren/Desktop/pagenote/node_modules/react-router-dom',
'@': '/Users/keren/Desktop/pagenote/packages/web-components/src',
'@@': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
'regenerator-runtime': '/Users/keren/Desktop/pagenote/node_modules/@umijs/preset-umi/node_modules/regenerator-runtime',
'pagenote/dist': '/Users/keren/Desktop/pagenote/packages/web-components/src/index',
pagenote: '/Users/keren/Desktop/pagenote/packages/web-components/src',
dumi$: '@@/dumi/exports',
'dumi/theme': 'dumi/theme-original',
'dumi/theme-original': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme',
'dumi/theme-default': '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default'
},
resolve: {
docDirs: [
'docs'
],
atomDirs: [
{
type: 'component',
dir: 'src'
}
],
codeBlockMode: 'active',
forceKebabCaseRouting: true
},
extraRemarkPlugins: undefined,
extraRehypePlugins: undefined,
routes: {
'404': {
id: '404',
path: '*',
absPath: '/*',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/client/pages/404.js'
},
'dumi-context-layout': {
id: 'dumi-context-layout',
path: '/',
file: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme/ContextWrapper',
parentId: undefined,
absPath: '/',
isLayout: true,
__absFile: '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme/ContextWrapper'
},
DocLayout: {
id: 'DocLayout',
path: '/',
file: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/layouts/DocLayout/index.js',
parentId: 'dumi-context-layout',
absPath: '/',
isLayout: true
},
'docs/guide': {
path: 'guide',
id: 'docs/guide',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/docs/guide.md',
absPath: '/guide'
},
'docs/index': {
path: '',
id: 'docs/index',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/docs/index.md',
absPath: '/'
},
'components/Foo/index': {
id: 'components/Foo/index',
path: 'components/foo',
absPath: '/components/foo',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/src/Foo/index.md',
meta: {
_atom_route: true
}
},
'components/Keyword/index': {
id: 'components/Keyword/index',
path: 'components/keyword',
absPath: '/components/keyword',
parentId: 'DocLayout',
file: '/Users/keren/Desktop/pagenote/packages/web-components/src/Keyword/index.md',
meta: {
_atom_route: true
}
},
'demo-render': {
id: 'demo-render',
path: '~demos/:id',
absPath: '/~demos/:id',
parentId: 'dumi-context-layout',
file: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/client/pages/Demo/index.js'
}
},
locales: [
{
id: 'zh-CN',
name: '中文',
base: '/'
}
],
pkg: {
name: 'pagenote',
version: '0.0.1',
description: 'A react library developed with dumi',
module: 'dist/index.js',
types: 'dist/index.d.ts',
scripts: {
start: 'npm run dev',
dev: 'dumi dev',
build: 'father build',
'build:watch': 'father dev',
'docs:build': 'dumi build',
prepare: 'husky install && dumi setup',
doctor: 'father doctor',
lint: 'npm run lint:es && npm run lint:css',
'lint:css': 'stylelint "{src,test}/**/*.{css,less}"',
'lint:es': 'eslint "{src,test}/**/*.{js,jsx,ts,tsx}"',
prepublishOnly: 'father doctor && npm run build'
},
authors: [],
license: 'MIT',
files: [
'dist'
],
commitlint: {
'extends': [
'@commitlint/config-conventional'
]
},
'lint-staged': {
'*.{md,json}': [
'prettier --write --no-error-on-unmatched-pattern'
],
'*.{css,less}': [
'stylelint --fix',
'prettier --write'
],
'*.{js,jsx}': [
'eslint --fix',
'prettier --write'
],
'*.{ts,tsx}': [
'eslint --fix',
'prettier --parser=typescript --write'
]
},
publishConfig: {
access: 'public'
},
peerDependencies: {
react: '>=16.9.0',
'react-dom': '>=16.9.0'
},
devDependencies: {
'@commitlint/cli': '^18.4.3',
'@commitlint/config-conventional': '^18.4.3',
'@types/react': '^18.2.38',
'@types/react-dom': '^18.2.17',
'@umijs/lint': '^4.0.88',
autoprefixer: '^10.4.16',
'css-loader': '^6.8.1',
dumi: '^2.2.14',
eslint: '^8.54.0',
father: '^4.3.7',
husky: '^8.0.3',
'lint-staged': '^15.1.0',
'node-sass': '^9.0.0',
postcss: '^8.4.32',
'postcss-loader': '^7.3.3',
prettier: '^3.1.0',
'prettier-plugin-organize-imports': '^3.2.3',
'prettier-plugin-packagejson': '^2.4.6',
'raw-loader': '^4.0.2',
react: '^18.2.0',
'react-dom': '^18.2.0',
'sass-loader': '^13.3.2',
'sass-to-string': '^1.6.3',
'style-loader': '^3.3.3',
stylelint: '^15.11.0',
tailwindcss: '^3.3.6'
},
dependencies: {
'@r2wc/react-to-web-component': '^2.0.3'
}
},
builtins: {
API: {
specifier: 'API',
source: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/builtins/API/index.js'
},
Badge: {
specifier: 'Badge',
source: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/builtins/Badge/index.js'
},
Container: {
specifier: 'Container',
source: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/builtins/Container/index.js'
},
Previewer: {
specifier: 'Previewer',
source: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/builtins/Previewer/index.js'
},
SourceCode: {
specifier: 'SourceCode',
source: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/builtins/SourceCode/index.js'
},
Table: {
specifier: 'Table',
source: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/builtins/Table/index.js'
},
Tree: {
specifier: 'Tree',
source: '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default/builtins/Tree/index.js'
},
DumiDemo: {
specifier: '{ DumiDemo }',
source: 'dumi'
},
DumiDemoGrid: {
specifier: '{ DumiDemoGrid }',
source: 'dumi'
},
Link: {
specifier: '{ Link }',
source: 'dumi'
}
}
}
}
]
}
]
},
/* config.module.rule('dumi-page') */
{
type: 'javascript/auto',
test: /\.(j|t)sx?$/,
resourceQuery: /meta$/,
use: [
/* config.module.rule('dumi-page').use('page-meta-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/loaders/page/index.js'
}
]
},
/* config.module.rule('dumi-demo') */
{
type: 'javascript/auto',
test: /\..+$/,
enforce: 'pre',
resourceQuery: /techStack/,
use: [
/* config.module.rule('dumi-demo').use('demo-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/loaders/demo/index.js',
options: {
techStacks: [
{
name: 'react'
}
],
cwd: '/Users/keren/Desktop/pagenote/packages/web-components'
}
}
]
},
/* config.module.rule('dumi-raw') */
{
type: 'javascript/auto',
enforce: 'post',
resourceQuery: /dumi-raw/,
use: [
/* config.module.rule('dumi-raw').use('raw-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/raw-loader/dist/cjs.js'
},
/* config.module.rule('dumi-raw').use('pre-raw-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/loaders/pre-raw/index.js'
}
]
},
/* config.module.rule('raw') */
{
test: /\.*\?inline$/,
use: [
/* config.module.rule('raw').use('raw-loader') */
{
loader: 'raw-loader'
}
]
}
]
},
optimization: {
minimize: false
},
plugins: [
/* config.plugin('node-polyfill-provider') */
new ProvidePlugin(
{
Buffer: [
'buffer',
'Buffer'
],
process: '/Users/keren/Desktop/pagenote/node_modules/process/browser.js'
}
),
/* config.plugin('mini-css-extract-plugin') */
new MiniCssExtractPlugin(
{
filename: '[name].css',
chunkFilename: '[name].chunk.css',
ignoreOrder: true
}
),
/* config.plugin('ignore-moment-locale') */
new IgnorePlugin(
{
resourceRegExp: /^\.\/locale$/,
contextRegExp: /moment$/
}
),
/* config.plugin('define') */
new DefinePlugin(
{
'process.env': {
NODE_ENV: '"development"',
PUBLIC_PATH: '"/"'
}
}
),
/* config.plugin('progress-plugin-dev') */
new UmiProgressPlugin(),
/* config.plugin('hmr') */
new HotModuleReplacementPlugin(),
/* config.plugin('fastRefresh') */
new ReactRefreshPlugin(
{
overlay: false,
include: /\.([cm]js|[jt]sx?|flow|md)$/i,
exclude: /node_modules/i
}
),
/* config.plugin('harmony-linking-error-plugin') */
new HarmonyLinkingErrorPlugin(),
/* config.plugin('case-sensitive-paths') */
new CaseSensitivePathsPlugin(),
/* config.plugin('docSideEffects') */
new docSideEffectsWebpackPlugin(
{
sideEffects: [
'.dumi/tmp/**',
'.dumi/theme/**'
],
pkgPath: '/Users/keren/Desktop/pagenote/packages/web-components/package.json'
}
)
],
entry: {
umi: [
'/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/client/client/client.js',
'/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/umi.ts'
]
}
}
{
name: 'MFSU',
mode: 'development',
stats: 'none',
devtool: 'cheap-module-source-map',
target: [
'web',
'es5'
],
experiments: {
topLevelAwait: true,
outputModule: false
},
cache: {
type: 'filesystem',
version: '4.0.89',
buildDependencies: {
config: [
'/Users/keren/Desktop/pagenote/packages/web-components/package.json',
'/Users/keren/Desktop/pagenote/packages/web-components/.dumirc.ts'
]
},
cacheDirectory: '/Users/keren/Desktop/pagenote/packages/web-components/node_modules/.cache/mfsu-deps'
},
infrastructureLogging: {
level: 'error'
},
output: {
path: '/Users/keren/Desktop/pagenote/packages/web-components/docs-dist',
filename: '[name].[contenthash:8].js',
chunkFilename: '[name].[contenthash:8].async.js',
publicPath: '/',
pathinfo: true,
assetModuleFilename: 'mf-dep_[name].[hash:8][ext]',
hashFunction: 'xxhash64'
},
resolve: {
symlinks: true,
alias: {
umi: '@@/exports',
react: '/Users/keren/Desktop/pagenote/node_modules/react',
'react-dom': '/Users/keren/Desktop/pagenote/node_modules/react-dom',
'react-router': '/Users/keren/Desktop/pagenote/node_modules/react-router',
'react-router-dom': '/Users/keren/Desktop/pagenote/node_modules/react-router-dom',
'@': '/Users/keren/Desktop/pagenote/packages/web-components/src',
'@@': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp',
'regenerator-runtime': '/Users/keren/Desktop/pagenote/node_modules/@umijs/preset-umi/node_modules/regenerator-runtime',
'pagenote/dist': '/Users/keren/Desktop/pagenote/packages/web-components/src/index',
pagenote: '/Users/keren/Desktop/pagenote/packages/web-components/src',
dumi$: '@@/dumi/exports',
'dumi/theme': 'dumi/theme-original',
'dumi/theme-original': '/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/dumi/theme',
'dumi/theme-default': '/Users/keren/Desktop/pagenote/node_modules/dumi/theme-default'
},
extensions: [
'.ts',
'.tsx',
'.js',
'.jsx',
'.mjs',
'.cjs',
'.json',
'.wasm'
],
modules: [
'node_modules'
],
fallback: {
assert: '/Users/keren/Desktop/pagenote/node_modules/node-libs-browser/node_modules/assert/assert.js',
buffer: '/Users/keren/Desktop/pagenote/node_modules/buffer/index.js',
child_process: false,
cluster: false,
console: '/Users/keren/Desktop/pagenote/node_modules/console-browserify/index.js',
constants: '/Users/keren/Desktop/pagenote/node_modules/constants-browserify/constants.json',
crypto: '/Users/keren/Desktop/pagenote/node_modules/crypto-browserify/index.js',
dgram: false,
dns: false,
domain: '/Users/keren/Desktop/pagenote/node_modules/domain-browser/source/index.js',
events: '/Users/keren/Desktop/pagenote/node_modules/events/events.js',
fs: false,
http: false,
https: false,
module: false,
net: false,
os: '/Users/keren/Desktop/pagenote/node_modules/os-browserify/browser.js',
path: '/Users/keren/Desktop/pagenote/node_modules/path-browserify/index.js',
punycode: '/Users/keren/Desktop/pagenote/node_modules/punycode/punycode.js',
process: '/Users/keren/Desktop/pagenote/node_modules/process/browser.js',
querystring: '/Users/keren/Desktop/pagenote/node_modules/querystring-es3/index.js',
readline: false,
repl: false,
stream: '/Users/keren/Desktop/pagenote/node_modules/stream-browserify/index.js',
_stream_duplex: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/duplex.js',
_stream_passthrough: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/passthrough.js',
_stream_readable: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/readable.js',
_stream_transform: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/transform.js',
_stream_writable: '/Users/keren/Desktop/pagenote/node_modules/readable-stream/writable.js',
string_decoder: '/Users/keren/Desktop/pagenote/node_modules/string_decoder/lib/string_decoder.js',
sys: '/Users/keren/Desktop/pagenote/node_modules/node-libs-browser/node_modules/util/util.js',
timers: '/Users/keren/Desktop/pagenote/node_modules/timers-browserify/main.js',
tls: false,
tty: '/Users/keren/Desktop/pagenote/node_modules/tty-browserify/index.js',
url: '/Users/keren/Desktop/pagenote/node_modules/url/url.js',
util: '/Users/keren/Desktop/pagenote/node_modules/node-libs-browser/node_modules/util/util.js',
vm: '/Users/keren/Desktop/pagenote/node_modules/vm-browserify/index.js',
zlib: '/Users/keren/Desktop/pagenote/node_modules/browserify-zlib/lib/index.js'
}
},
module: {
rules: [
/* config.module.rule('src') */
{
test: /\.(js|mjs|cjs)$/,
include: [
[
'/Users/keren/Desktop/pagenote/packages/web-components',
'/Users/keren/Desktop/pagenote/packages/web-components'
]
],
exclude: [
/node_modules/
],
use: [
/* config.module.rule('src').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false,
pluginAutoCSSModules: true
}
]
],
plugins: []
}
}
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('jsx-ts-tsx') */
{
test: /\.(jsx|ts|tsx)$/,
use: [
/* config.module.rule('jsx-ts-tsx').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false,
pluginAutoCSSModules: true
}
]
],
plugins: []
}
}
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('extra-src') */
{
test: /\.(js|mjs|cjs)$/,
include: [
[
/dumi\/dist\/client/,
/compiled\/_internal\/searchWorker/,
/dumi\/theme-default/,
/@ant-design\/icons-svg/,
'/Users/keren/Desktop/pagenote/node_modules/dumi/dist/client/theme-api',
function () { /* omitted long function */ }
]
],
use: [
/* config.module.rule('extra-src').use('babel-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/babel-loader/index.js',
options: {
sourceType: 'unambiguous',
babelrc: false,
configFile: false,
cacheDirectory: false,
browserslistConfigFile: false,
targets: {
chrome: 80
},
customize: '/Users/keren/Desktop/pagenote/node_modules/dumi/dist/features/compile/babelLoaderCustomize.js',
presets: [
[
'/Users/keren/Desktop/pagenote/node_modules/@umijs/babel-preset-umi/dist/index.js',
{
presetEnv: {},
presetReact: {},
presetTypeScript: {},
pluginTransformRuntime: {},
pluginLockCoreJS: {},
pluginDynamicImportNode: false,
pluginAutoCSSModules: true
}
]
],
plugins: []
}
}
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('dep') */
{
test: /\.(js|mjs|cjs)$/,
include: [
/node_modules/
],
exclude: [
function () { /* omitted long function */ }
],
resolve: {
fullySpecified: false
}
},
/* config.module.rule('css') */
{
test: /\.css(\?.*)?$/,
oneOf: [
/* config.module.rule('css').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('css').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('css').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('css').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
}
]
},
/* config.module.rule('css').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('css').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('css').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('css').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
}
]
}
]
},
/* config.module.rule('less') */
{
test: /\.less(\?.*)?$/,
oneOf: [
/* config.module.rule('less').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('less').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('less').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('less').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('less').oneOf('css-modules').use('less-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/less-loader/index.js',
options: {
implementation: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-utils/compiled/less/index.js',
lessOptions: {
modifyVars: undefined,
javascriptEnabled: true
}
}
}
]
},
/* config.module.rule('less').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('less').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('less').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('less').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('less').oneOf('css').use('less-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/less-loader/index.js',
options: {
implementation: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-utils/compiled/less/index.js',
lessOptions: {
modifyVars: undefined,
javascriptEnabled: true
}
}
}
]
}
]
},
/* config.module.rule('sass') */
{
test: /\.(sass|scss)(\?.*)?$/,
oneOf: [
/* config.module.rule('sass').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('sass').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('sass').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('sass').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('sass').oneOf('css-modules').use('sass-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/sass-loader/index.js'
}
]
},
/* config.module.rule('sass').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('sass').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('sass').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('sass').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('sass').oneOf('css').use('sass-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/sass-loader/index.js'
}
]
}
]
},
/* config.module.rule('stylus') */
{
test: /\.(styl|stylus)(\?.*)?$/,
oneOf: [
/* config.module.rule('stylus').oneOf('css-modules') */
{
resourceQuery: /modules/,
use: [
/* config.module.rule('stylus').oneOf('css-modules').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('stylus').oneOf('css-modules').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: {
localIdentName: '[local]___[hash:base64:5]',
getLocalIdent: undefined
}
}
},
/* config.module.rule('stylus').oneOf('css-modules').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('stylus').oneOf('css-modules').use('stylus-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/stylus-loader/index.js'
}
]
},
/* config.module.rule('stylus').oneOf('css') */
{
sideEffects: true,
use: [
/* config.module.rule('stylus').oneOf('css').use('mini-css-extract-plugin') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/loader.js',
options: {
publicPath: './',
emit: true,
esModule: true
}
},
/* config.module.rule('stylus').oneOf('css').use('css-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/node_modules/css-loader/dist/cjs.js',
options: {
importLoaders: 1,
esModule: true,
url: {
filter: function () { /* omitted long function */ }
},
'import': true,
modules: undefined
}
},
/* config.module.rule('stylus').oneOf('css').use('postcss-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/postcss-loader/index.js',
options: {
postcssOptions: {
ident: 'postcss',
plugins: [
function () { /* omitted long function */ },
{
postcssPlugin: 'postcss-preset-env',
plugins: [
{
postcssPlugin: 'postcss-media-minmax',
AtRule: {
media: (atRule) => {
transform(atRule);
},
'custom-media': (atRule) => {
transform(atRule);
}
}
},
{
postcssPlugin: 'postcss-page-break',
Declaration: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-font-variant',
Once(root) {
root.walkRules(walkRule)
}
},
{
browsers: [
'chrome >= 80'
],
info: function () { /* omitted long function */ },
options: {
overrideBrowserslist: [
'chrome >= 80'
],
flexbox: 'no-2009'
},
postcssPlugin: 'autoprefixer',
prepare: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-progressive-custom-properties',
RuleExit: function () { /* omitted long function */ }
},
{
postcssPlugin: 'postcss-preset-env',
OnceExit: function () { /* omitted long function */ }
}
]
}
]
}
}
},
/* config.module.rule('stylus').oneOf('css').use('stylus-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/stylus-loader/index.js'
}
]
}
]
},
/* config.module.rule('asset') */
{
oneOf: [
/* config.module.rule('asset').oneOf('avif') */
{
test: /\.avif$/,
type: 'asset',
mimetype: 'image/avif',
parser: {
dataUrlCondition: {
maxSize: 10000
}
}
},
/* config.module.rule('asset').oneOf('image') */
{
test: /\.(bmp|gif|jpg|jpeg|png)$/,
type: 'asset',
parser: {
dataUrlCondition: {
maxSize: 10000
}
}
},
/* config.module.rule('asset').oneOf('fallback') */
{
type: 'asset/resource',
exclude: [
/^$/,
/\.(js|mjs|cjs|jsx|ts|tsx)$/,
/\.(css|less|sass|scss|styl|stylus)$/,
/\.html$/,
/\.json$/
]
}
]
},
/* config.module.rule('svgr') */
{
test: /\.svg$/,
issuer: /\.[jt]sx?$/,
type: 'javascript/auto',
use: [
/* config.module.rule('svgr').use('svgr-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/dist/loader/svgr.js',
options: {
svgoConfig: {
plugins: [
{
name: 'preset-default',
params: {
overrides: {
removeTitle: false
}
}
},
'prefixIds'
]
},
svgo: true
}
},
/* config.module.rule('svgr').use('url-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/url-loader/index.js',
options: {
limit: 10000,
fallback: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/file-loader/index.js'
}
}
]
},
/* config.module.rule('svg') */
{
test: /\.svg$/,
use: [
/* config.module.rule('svg').use('svgo-loader') */
{
loader: '/Users/keren/Desktop/pagenote/node_modules/@umijs/bundler-webpack/compiled/svgo-loader/index.js',
options: {
configFile: false
}
}
]
},
/* config.module.rule('raw') */
{
test: /\.*\?inline$/,
use: [
/* config.module.rule('raw').use('raw-loader') */
{
loader: 'raw-loader'
}
]
}
]
},
optimization: {
minimize: false
},
plugins: [
/* config.plugin('node-polyfill-provider') */
new ProvidePlugin(
{
Buffer: [
'buffer',
'Buffer'
],
process: '/Users/keren/Desktop/pagenote/node_modules/process/browser.js'
}
),
/* config.plugin('mini-css-extract-plugin') */
new MiniCssExtractPlugin(
{
filename: '[name].[contenthash:8].css',
chunkFilename: '[name].[contenthash:8].chunk.css',
ignoreOrder: true
}
),
/* config.plugin('ignore-moment-locale') */
new IgnorePlugin(
{
resourceRegExp: /^\.\/locale$/,
contextRegExp: /moment$/
}
),
/* config.plugin('define') */
new DefinePlugin(
{
'process.env': {
NODE_ENV: '"development"',
PUBLIC_PATH: '"/"'
}
}
),
/* config.plugin('progress-plugin-dev') */
new UmiProgressPlugin(),
/* config.plugin('harmony-linking-error-plugin') */
new HarmonyLinkingErrorPlugin(),
/* config.plugin('case-sensitive-paths') */
new CaseSensitivePathsPlugin()
],
entry: {
umi: [
'/Users/keren/Desktop/pagenote/packages/web-components/.dumi/tmp/umi.ts'
]
}
}
